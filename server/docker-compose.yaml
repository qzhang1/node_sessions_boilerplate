version: "3.9"

services:
  redis:
    container_name: sessions-cache
    image: redis:latest
    env_file:
      - dev.env
    ports:
      - "6379:6379"
    volumes:
      - ./redis_db:/var/lib/redis/data
    networks:
      - app-network
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD}"

  postgres:
    container_name: sessions-datastore
    image: postgres:13
    env_file:
      - dev.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_db:/var/lib/postgresql/data
      - ./src/datastore/init.sql:/docker-entrypoint-initdb.d/init.sql
    user: postgres
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:v2.17.1
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    ports:
      - 9090:9090
    restart: unless-stopped
    networks:
      - app-network

  grafana:
    image: grafana/grafana:6.7.2
    restart: unless-stopped
    env_file:
      - ./grafana/dev.env
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - app-network

volumes:
  postgres_db:
  prometheus_data: {}
  grafana_data: {}
networks:
  app-network:
    driver: bridge
